package controller.util;

import java.util.ArrayList;
import model.util.Patrimonio;
import model.util.Filial;
import model.util.Escritorio;

public class Database {
    private ArrayList<Patrimonio> patrimonios;

    public Database() {
        patrimonios = new ArrayList<>();
    }

    public void adicionarPatrimonio(Patrimonio patrimonio) {
        patrimonios.add(patrimonio);
    }

    public void adicionarPatrimonio(Patrimonio patrimonio, Filial filial) {
        patrimonio.setFilial(filial);
        patrimonios.add(patrimonio);
    }

    public void excluirPatrimonio(Patrimonio patrimonio) {
        patrimonios.remove(patrimonio);
    }

    public void editarPatrimonio(Filial filial, String nomePatrimonio, String novoNome) {
        Patrimonio patrimonio = buscarPatrimonio(filial, nomePatrimonio);
        if (patrimonio != null) {
            patrimonio.setNome(novoNome);
        }
    }

    public ArrayList<Patrimonio> getPatrimonios() {
        return new ArrayList<>(patrimonios);
    }

    public void adicionarFilial(Filial filial) {
        Escritorio.adicionarFilial(filial);
    }

    public void excluirFilial(Filial filial) {
        Escritorio.excluirFilial(filial);
        patrimonios.removeIf(patrimonio -> patrimonio.getFilial().equals(filial));
    }

    public ArrayList<Filial> getFiliais() {
        return ArrayList<>(Escritorio.getFiliais());
    }

    public Patrimonio buscarPatrimonio(Filial filial, String nome) {
        if (filial != null) {
            for (Patrimonio patrimonio : patrimonios) {
                if (patrimonio.getNome().equals(nome) && patrimonio.getFilial().equals(filial)) {
                    return patrimonio;
                }
            }
        }
        return null;
    }

    public ArrayList<Patrimonio> getPatrimonios(Filial filial) {
        ArrayList<Patrimonio> patrimoniosFiltrados = new ArrayList<>();
        for (Patrimonio patrimonio : patrimonios) {
            if (patrimonio.getFilial().equals(filial)) {
                patrimoniosFiltrados.add(patrimonio);
            }
        }
        return patrimoniosFiltrados;
    }

    public String[] getNomesPatrimonios(Filial filial) {
        ArrayList<String> nomesPatrimonios = new ArrayList<>();
        for (Patrimonio patrimonio : patrimonios) {
            if (patrimonio.getFilial().equals(filial)) {
                nomesPatrimonios.add(patrimonio.getNome());
            }
        }
        return nomesPatrimonios.toArray(new String[0]);
    }

    public Filial buscarFilial(String endereco) {
        ArrayList<Filial> filiais = Escritorio.getFiliais();
        for (Filial filial : filiais) {
            if (filial.getEndereco().equals(endereco)) {
                return filial;
            }
        }
        return null;
    }
}
